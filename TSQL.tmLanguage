<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>fileTypes</key>
    <array>
        <string>sql</string>
        <string>ddl</string>
        <string>dml</string>
        <string>tsql</string>
    </array>
    <key>foldingStartMarker</key>
    <string>\s*\(\s*$</string>
    <key>foldingStopMarker</key>
    <string>^\s*\)</string>
    <key>keyEquivalent</key>
    <string>^~S</string>
    <key>name</key>
    <string>T-SQL</string>
    <key>patterns</key>
    <array>
        <dict>
            <key>include</key>
            <string>#comments</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#label_goto</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#table_alias</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#alias_as</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:^go\s*$)</string>
            <key>name</key>
            <string>support.constant.go.other.sql</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.create.sql</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.sql</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?i:^\s*(create)\s+(aggregate|conversion|database|domain|function|group|(unique\s+)?index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view|proc|procedure)\s+)([#'"`]?)(\w+)</string>
            <key>name</key>
            <string>meta.create.sql</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.create.sql</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?i:^\s*(drop)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view|proc|procedure))</string>
            <key>name</key>
            <string>meta.drop.sql</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.create.sql</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.table.sql</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.sql</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.cascade.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)</string>
            <key>name</key>
            <string>meta.drop.sql</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.create.sql</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.table.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?i:^\s*(alter)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view|proc|procedure)\s+)</string>
            <key>name</key>
            <string>meta.alter.sql</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>10</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.sql</string>
                </dict>
                <key>11</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>12</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>13</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>14</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.sql</string>
                </dict>
                <key>15</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.sql</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.sql</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.sql</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.sql</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?xi)

                # normal stuff, capture 1
                 \b[^\.](BIDENT|BBRIEF|BCOMMENT|BBOOL|bigint|numeric|bit|smallint|decimal|smallmoney|int|tinyint|money|float|real|date|datetimeoffset|datetime2|smalldatetime|datetime|time|char|varchar|text|nchar|nvarchar|ntext|binary|varbinary|image|cursor|timestamp|hierarchyid|uniqueidentifier|sysname|sql_variant|xml|table|geography|geometry)\b

                # numeric suffix, capture 2 + 3i
                |\b(bit\svarying|character\s(?:varying)?|tinyint|var\schar|float|interval)\((\d+)\)

                # optional numeric suffix, capture 4 + 5i
                |\b(char|varchar\d?)\b(?:\((\d+)\))?

                # special case, capture 6 + 7i + 8i
                |\b(numeric|decimal)\b(?:\((\d+),(\d+)\))?

                # special case, captures 9, 10i, 11
                |\b(times)(?:\((\d+)\))(\swith(?:out)?\stime\szone\b)?

                # special case, captures 12, 13, 14i, 15
                |\b(timestamp)(?:(s)\((\d+)\)(\swith(?:out)?\stime\szone\b)?)?

            </string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\b((?:primary|foreign)\s+key|references|on\sdelete(\s+cascade)?|check|constraint)\b)</string>
            <key>name</key>
            <string>storage.modifier.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b\d+\b</string>
            <key>name</key>
            <string>constant.numeric.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?&lt;=^|[^\w\.@])@\w+</string>
            <key>name</key>
            <string>variable.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\w+\.</string>
            <key>name</key>
            <string>entity.name.alias.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\b(select(\s+distinct)?|insert\s+(ignore\s+)?into|insert|update|with|delete|from|join|set|print|declare|open|close|fetch|deallocate|cursor|for|while|case|when|then|between|is|exec|execute|where|group\sby|or|like|and|not|exists|union(\s+all)?|having|order\sby|over|limit|(inner|cross)\s+join|(outer|cross)\s+apply|straight_join|(left|right)(\s+outer)?\s+join|natural(\s+(left|right)(\s+outer)?)?\s+join)\b)</string>
            <key>name</key>
            <string>keyword.other.DML.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\b(null)\b)</string>
            <key>name</key>
            <string>constant.language.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\b(on|((is\s+)?not\s+)?null)\b)</string>
            <key>name</key>
            <string>keyword.other.DDL.create.II.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\bvalues\b)</string>
            <key>name</key>
            <string>keyword.other.DML.II.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Reserved keywords: https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql</string>
            <key>match</key>
            <string>(?i:\b(add|external|procedure|all|fetch|public|alter|file|raiserror|and|fillfactor|read|any|for|readtext|as|foreign|reconfigure|asc|freetext|references|authorization|freetexttable|replication|backup|from|restore|begin|full|restrict|between|function|return|break|goto|revert|browse|grant|revoke|bulk|group|right|by|having|rollback|cascade|holdlock|rowcount|case|identity|rowguidcol|check|identity_insert|rule|checkpoint|identitycol|save|close|if|schema|clustered|in|securityaudit|coalesce|index|select|collate|inner|semantickeyphrasetable|column|insert|semanticsimilaritydetailstable|commit|intersect|semanticsimilaritytable|compute|into|session_user|constraint|is|set|contains|join|setuser|containstable|key|shutdown|continue|kill|some|convert|left|statistics|create|like|system_user|cross|lineno|table|current|load|tablesample|current_date|merge|textsize|current_time|national|then|current_timestamp|nocheck|to|current_user|nonclustered|top|cursor|not|tran|database|null|transaction|dbcc|nullif|trigger|deallocate|of|truncate|declare|off|try_convert|default|offsets|tsequal|delete|on|union|deny|open|unique|desc|opendatasource|unpivot|disk|openquery|update|distinct|openrowset|updatetext|distributed|openxml|use|double|option|user|drop|or|values|dump|order|varying|else|outer|view|end|over|waitfor|errlvl|percent|when|escape|pivot|where|except|plan|while|exec|precision|with|execute|primary|within\sgroup|exists|print|writetext|exit|proc)\b)</string>
            <key>name</key>
            <string>keyword.other.reserved.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Control-of-flow keywords: https://docs.microsoft.com/en-us/sql/t-sql/language-elements/control-of-flow</string>
            <key>match</key>
            <string>(?i:\b(begin|end|return|break|throw|continue|try|catch|goto|waitfor|if|else|while)\b)</string>
            <key>name</key>
            <string>keyword.other.reserved.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Label:</string>
            <key>match</key>
            <string>^(.+):\s*$</string>
            <key>name</key>
            <string>support.label.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\b(begin\s+try|begin\s+catch|end\s+try|end\s+catch|begin\s+tran|begin\s+transaction|begin(\s+work)?|raiserror(\s+work)?|rollback\s+tran|commit(\s+work)?|rollback(\s+work)?|if(\s+work)?|goto|end(\s+work)?|else(\s+work)?|return)\b)</string>
            <key>name</key>
            <string>keyword.other.LUW.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)</string>
            <key>name</key>
            <string>keyword.other.authorization.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:\bin\b)</string>
            <key>name</key>
            <string>keyword.other.data-integrity.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i:^\s*(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)</string>
            <key>name</key>
            <string>keyword.other.object-comments.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i)\bAS\b</string>
            <key>name</key>
            <string>keyword.other.alias.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>(?i)\b(DESC|ASC)\b</string>
            <key>name</key>
            <string>keyword.other.order.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\*</string>
            <key>name</key>
            <string>keyword.operator.star.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>[!&lt;&gt;]?=|&lt;&gt;|&lt;|&gt;</string>
            <key>name</key>
            <string>keyword.operator.comparison.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>-|\+|/</string>
            <key>name</key>
            <string>keyword.operator.math.sql</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\|\|</string>
            <key>name</key>
            <string>keyword.operator.concatenator.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Rowset functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/rowset-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(opendatasource|openrowset|openquery|openxml)\b</string>
            <key>name</key>
            <string>support.function.rowset.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Aggregate Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/aggregate-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(avg|min|checksum_agg|sum|count|stdev|count_big|stdevp|grouping|var|grouping_id|varp|max)\b</string>
            <key>name</key>
            <string>support.function.aggr.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Ranking Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/ranking-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(rank|ntile|dense_rank|row_number)\b</string>
            <key>name</key>
            <string>support.function.ranking.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Analytic Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/analytic-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(cume_dist|lead|first_value|percentile_cont|lag|percentile_disc|last_value|percent_rank)\b</string>
            <key>name</key>
            <string>support.function.analytic.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Collation Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/collation-functions-collationproperty-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(collationproperty|tertiary_weights)\b</string>
            <key>name</key>
            <string>support.function.collation.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Configuration Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/configuration-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)@@\b(datefirst|options|dbts|remserver|langid|servername|language|servicename|lock_timeout|spid|max_connections|textsize|max_precision|version|nestlevel)\b</string>
            <key>name</key>
            <string>support.function.config.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Conversion Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/conversion-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(cast|convert|parse|try_cast|try_convert|try_parse)\b</string>
            <key>name</key>
            <string>support.function.rowset.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Cryptographic Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/cryptographic-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(encryptbykey|decryptbykey|encryptbypassphrase|decryptbypassphrase|key_id|key_guid|decryptbykeyautoasymkey|key_name|symkeyproperty|encryptbyasymkey|decryptbyasymkey|encryptbycert|decryptbycert|asymkeyproperty|asymkey_id|signbyasymkey|verifysignedbyasmkey|signbycert|verigysignedbycert|is_objectsigned|decryptbykeyautocert|hashbytes)\b</string>
            <key>name</key>
            <string>support.function.crypto.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Cursor Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/cursor-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)(@@\b(cursor_rows|fetch_status)|cursor_status)\b</string>
            <key>name</key>
            <string>support.function.cursor.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Data Type Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/data-type-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)(@@\b(datalength|ident_seed|ident_current|identity|ident_incr|sql_variant_property)\b</string>
            <key>name</key>
            <string>support.function.datatype.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Date and time Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/date-and-time-data-types-and-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(sysdatetime|sysdatetimeoffset|sysutcdatetime|current_timestamp|getdate|getutcdate|datename|datepart|day|month|year|datefromparts|datetime2fromparts|datetimefromparts|datetimeoffsetfromparts|smalldatetimefromparts|timefromparts|datediff|datediff_big|dateadd|eomonth|switchoffset|todatetimeoffset|isdate)|@@\b(datefirst|language)\b</string>
            <key>name</key>
            <string>support.function.datetime.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>JSON Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/json-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(isjson|json_value|json_query|json_modify)\b</string>
            <key>name</key>
            <string>support.function.json.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Logical Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/logical-functions-choose-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(choose|iif)\b</string>
            <key>name</key>
            <string>support.function.logical.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Mathematical Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/mathematical-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(abs|degrees|rand|acos|exp|round|asin|floor|sign|atan|log|sin|atn2|log10|sqrt|ceiling|pi|square|cos|power|tan|cot|radians)\b</string>
            <key>name</key>
            <string>support.function.math.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Metadata Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/metadata-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)@@\b(procid)|\b(index_col|app_name|indexkey_property|applock_mode|indexproperty|applock_test|next value for|assemblyproperty|object_definition|col_length|object_id|col_name|object_name|columnproperty|object_schema_name|database_principal_id|objectproperty|databasepropertyex|objectpropertyex|db_id|original_db_name|db_name|parsename|file_id|schema_id|file_idex|schema_name|file_name|scope_identity|filegroup_id|serverproperty|filegroup_name|stats_date|filegroupproperty|type_id|fileproperty|type_name|fulltextcatalogproperty|typeproperty|fulltextserviceproperty)\b</string>
            <key>name</key>
            <string>support.function.metadata.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Replication Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/replication-functions-publishingservername</string>
            <key>match</key>
            <string>(?i)\b(publishingservername)\b</string>
            <key>name</key>
            <string>support.function.replication.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Security Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/security-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(certencoded|pwdcompare|certprivatekey|pwdencrypt|current_user|schema_id|database_principal_id|schema_name|session_user|suser_id|suser_sid|has_perms_by_name|suser_sname|is_member|system_user|is_rolemember|suser_name|is_srvrolemember|user_id|original_login|user_name|permissions)\b</string>
            <key>name</key>
            <string>support.function.security.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>String Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/string-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(ascii|char|charindex|concat|concat_ws|difference|format|left|len|lower|ltrim|nchar|patindex|quotename|replace|replicate|reverse|right|rtrim|soundex|space|str|string_agg|string_escape|string_split|stuff|substring|translate|trim|unicode|upper)\b</string>
            <key>name</key>
            <string>support.function.string.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>System Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/system-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)\$\b(partition)|@@\b(error|identity|pack_received|rowcount|trancount)|\b(error_severity|error_state|formatmessage|getansinull|get_filestream_transaction_context|host_id|binary_checksum|host_name|checksum|isnull|connectionproperty|isnumeric|context_info|min_active_rowversion|current_request_id|newid|error_line|newsequentialid|error_message|rowcount_big|error_number|xact_state|error_procedure)\b</string>
            <key>name</key>
            <string>support.function.system.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>System Statistical Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/system-statistical-functions-transact-sql</string>
            <key>match</key>
            <string>(?i)@@\b(connections|pack_received|cpu_busy|pack_sent|timeticks|idle|total_errors|io_busy|total_read|packet_errors|total_write)\b</string>
            <key>name</key>
            <string>support.function.system-stats.sql</string>
        </dict>
        <dict>
            <key>comment</key>
            <string>Text and image Functions: https://docs.microsoft.com/en-us/sql/t-sql/functions/text-and-image-functions-textptr-transact-sql</string>
            <key>match</key>
            <string>(?i)\b(patindex|textvalid|textptr)\b</string>
            <key>name</key>
            <string>support.function.text-image.sql</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#strings</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#regexps</string>
        </dict>
    </array>
    <key>repository</key>
    <dict>
        <key>alias_as</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.alias-as.other.sql</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.alias.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(?&lt;=[\w])\s+(as)\s+(\w+)</string>
            <key>name</key>
            <string>meta.alias-as.sql</string>
        </dict>
        <key>comments</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.comment.sql</string>
                        </dict>
                    </dict>
                    <key>match</key>
                    <string>(--).*$\n?</string>
                    <key>name</key>
                    <string>comment.line.double-dash.sql</string>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>/\*</string>
                    <key>captures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.comment.sql</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>\*/</string>
                    <key>name</key>
                    <string>comment.block.c</string>
                </dict>
            </array>
        </dict>
        <key>label_goto</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.goto_label.sql</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>goto Label</string>
            <key>match</key>
            <string>(?&lt;=goto)\s+(\w+)</string>
        </dict>
        <key>regexps</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>begin</key>
                    <string>/(?=\S.*/)</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>/</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.regexp.sql</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#string_interpolation</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>\\/</string>
                            <key>name</key>
                            <string>constant.character.escape.slash.sql</string>
                        </dict>
                    </array>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>%r\{</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                    </dict>
                    <key>comment</key>
                    <string>We should probably handle nested bracket pairs!?! -- Allan</string>
                    <key>end</key>
                    <string>\}</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.regexp.modr.sql</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#string_interpolation</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <key>string_interpolation</key>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.sql</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(#\{)([^\}]*)(\})</string>
            <key>name</key>
            <string>string.interpolated.sql</string>
        </dict>
        <key>strings</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>comment</key>
                    <string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
                    <key>match</key>
                    <string>(')[^'\\]*(')</string>
                    <key>name</key>
                    <string>string.quoted.single.sql</string>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>'</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>'</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.quoted.single.sql</string>
                </dict>
                <dict>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>comment</key>
                    <string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
                    <key>match</key>
                    <string>(`)[^`\\]*(`)</string>
                    <key>name</key>
                    <string>string.quoted.other.backtick.sql</string>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>`</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>`</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.quoted.other.backtick.sql</string>
                </dict>
                <dict>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>comment</key>
                    <string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
                    <key>match</key>
                    <string>(")[^"#]*(")</string>
                    <key>name</key>
                    <string>string.quoted.double.sql</string>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>"</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>"</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.quoted.double.sql</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#string_interpolation</string>
                        </dict>
                    </array>
                </dict>
                <dict>
                    <key>begin</key>
                    <string>%\{</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.sql</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>\}</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.sql</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.other.quoted.brackets.sql</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#string_interpolation</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <key>table_alias</key>
        <dict>
            <key>begin</key>
            <string>(?&lt;=from|join)\s*</string>
            <key>end</key>
            <string>(?=\n|,|with|outer|inner|left|right|cross|where|join|on)</string>
            <key>name</key>
            <string>meta.alias.sql</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>captures</key>
                    <dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>variable.table.sql</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>string.temp.table.sql</string>
                        </dict>
                        <key>4</key>
                        <dict>
                            <key>name</key>
                            <string>keyword.alias-as.other.sql</string>
                        </dict>
                        <key>5</key>
                        <dict>
                            <key>name</key>
                            <string>entity.name.alias.sql</string>
                        </dict>
                    </dict>
                    <key>match</key>
                    <string>((@\w+)|(#{1,2}\w+)|[\w\.\]\[]+)\s+(as\s+)?(?!=\n|,|with|outer|inner|left|right|cross|where|join|on)(\w+)</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#comments</string>
                </dict>
            </array>
        </dict>
    </dict>
    <key>scopeName</key>
    <string>source.tsql</string>
    <key>uuid</key>
    <string>C49120AC-6ECC-11D9-ACC8-000D93589AF6</string>
</dict>
</plist>
